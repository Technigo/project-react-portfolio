{"ast":null,"code":"var _jsxFileName = \"/Users/tinabruce/Documents/Programming/Technigo/bootcamp/sprint_3/project-react-portfolio/code/src/components/OtherProjects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { BASE_URL } from 'utils/urls';\nimport { SmallHeadline, Tags, Tag } from 'styles/GlobalStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OtherProjects = () => {\n  _s();\n\n  const [projects, setProjects] = useState([]); // Get all my projects on GitHub via API call:\n\n  useEffect(() => {\n    fetch(BASE_URL).then(response => response.json()).then(json => setProjects(json)).catch(error => console.error(error));\n  }, []); // Filtered array with all relevant projects:\n\n  const relProjects = projects.filter(item => item.name.includes('project-') && !item.name.includes('portfolio')); // Filter for other projects (not starred on github):\n\n  const remaining = relProjects.filter(item => item.stargazers_count === 0 && item.name !== 'project-business-site'); // Function to map over the tags and display them:\n\n  const renderTags = tags => {\n    return tags.map(tag => {\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        children: tag.toUpperCase()\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  return remaining.map(project => {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: project.svn_url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: [/*#__PURE__*/_jsxDEV(SmallHeadline, {\n        children: project.name.replace('project-', '').replace('-', ' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: project.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tags, {\n        children: renderTags(project.topics)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, project.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this);\n  });\n};\n\n_s(OtherProjects, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n\n_c = OtherProjects;\n\nvar _c;\n\n$RefreshReg$(_c, \"OtherProjects\");","map":{"version":3,"names":["React","useEffect","useState","BASE_URL","SmallHeadline","Tags","Tag","OtherProjects","projects","setProjects","fetch","then","response","json","catch","error","console","relProjects","filter","item","name","includes","remaining","stargazers_count","renderTags","tags","map","tag","toUpperCase","project","svn_url","replace","description","topics","id"],"sources":["/Users/tinabruce/Documents/Programming/Technigo/bootcamp/sprint_3/project-react-portfolio/code/src/components/OtherProjects.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BASE_URL } from 'utils/urls';\nimport { SmallHeadline, Tags, Tag } from 'styles/GlobalStyles';\n\nexport const OtherProjects = () => {\n  const [projects, setProjects] = useState([]);\n\n  // Get all my projects on GitHub via API call:\n  useEffect(() => {\n    fetch(BASE_URL)\n      .then((response) => response.json())\n      .then((json) => setProjects(json))\n      .catch((error) => console.error(error))\n  }, []);\n\n  // Filtered array with all relevant projects:\n  const relProjects = projects.filter((item) => item.name.includes('project-') && (!item.name.includes('portfolio')));\n\n  // Filter for other projects (not starred on github):\n  const remaining = relProjects.filter((item) => item.stargazers_count === 0 && item.name !== 'project-business-site');\n\n  // Function to map over the tags and display them:\n  const renderTags = (tags) => {\n    return tags.map((tag) => {\n      return <Tag key={tag}>{tag.toUpperCase()}</Tag>\n    })\n  }\n\n  return (\n    remaining.map((project) => {\n      return (\n        <a key={project.id} href={project.svn_url} target=\"_blank\" rel=\"noopener noreferrer\">\n          <SmallHeadline>{project.name.replace('project-', '').replace('-', ' ')}</SmallHeadline>\n          <p>{project.description}</p>\n          <Tags>{renderTags(project.topics)}</Tags>\n        </a>\n      );\n    })\n  )\n}\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,aAAT,EAAwBC,IAAxB,EAA8BC,GAA9B,QAAyC,qBAAzC;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;EAAA;;EACjC,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC,CADiC,CAGjC;;EACAD,SAAS,CAAC,MAAM;IACdS,KAAK,CAACP,QAAD,CAAL,CACGQ,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESE,IAAD,IAAUJ,WAAW,CAACI,IAAD,CAF7B,EAGGC,KAHH,CAGUC,KAAD,IAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAHpB;EAID,CALQ,EAKN,EALM,CAAT,CAJiC,CAWjC;;EACA,MAAME,WAAW,GAAGT,QAAQ,CAACU,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,UAAnB,KAAmC,CAACF,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,WAAnB,CAA9D,CAApB,CAZiC,CAcjC;;EACA,MAAMC,SAAS,GAAGL,WAAW,CAACC,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACI,gBAAL,KAA0B,CAA1B,IAA+BJ,IAAI,CAACC,IAAL,KAAc,uBAA1E,CAAlB,CAfiC,CAiBjC;;EACA,MAAMI,UAAU,GAAIC,IAAD,IAAU;IAC3B,OAAOA,IAAI,CAACC,GAAL,CAAUC,GAAD,IAAS;MACvB,oBAAO,QAAC,GAAD;QAAA,UAAgBA,GAAG,CAACC,WAAJ;MAAhB,GAAUD,GAAV;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFM,CAAP;EAGD,CAJD;;EAMA,OACEL,SAAS,CAACI,GAAV,CAAeG,OAAD,IAAa;IACzB,oBACE;MAAoB,IAAI,EAAEA,OAAO,CAACC,OAAlC;MAA2C,MAAM,EAAC,QAAlD;MAA2D,GAAG,EAAC,qBAA/D;MAAA,wBACE,QAAC,aAAD;QAAA,UAAgBD,OAAO,CAACT,IAAR,CAAaW,OAAb,CAAqB,UAArB,EAAiC,EAAjC,EAAqCA,OAArC,CAA6C,GAA7C,EAAkD,GAAlD;MAAhB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAIF,OAAO,CAACG;MAAZ;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,IAAD;QAAA,UAAOR,UAAU,CAACK,OAAO,CAACI,MAAT;MAAjB;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA,GAAQJ,OAAO,CAACK,EAAhB;MAAA;MAAA;MAAA;IAAA,QADF;EAOD,CARD,CADF;AAWD,CAnCM;;GAAM3B,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}